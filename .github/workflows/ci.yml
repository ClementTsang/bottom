# Main CI pipeline to validate PRs.
#
# CI pipeline based on:
# - https://github.com/heim-rs/heim/blob/master/.github/workflows/ci.yml
# - https://github.com/BurntSushi/ripgrep/blob/master/.github/workflows/ci.yml

name: ci

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - master

jobs:
  pre_job:
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@master
        with:
          concurrent_skipping: "same_content_newer"
          skip_after_successful_duplicate: "true"
          paths: '["tests/**", "src/**", ".github/workflows/ci.yml", ".cargo/**", "Cargo.toml", "Cargo.lock", "build.rs", "clippy.toml", "rustfmt.toml"]'
          do_not_skip: '["workflow_dispatch"]'

  rustfmt:
    needs: pre_job
    if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macOS-latest
          - windows-2019
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt

      - uses: Swatinem/rust-cache@v1

      - run: cargo fmt --all -- --check

  clippy:
    needs: pre_job
    if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macOS-latest
          - windows-2019
    steps:
      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: clippy

      - uses: Swatinem/rust-cache@v1

      - run: cargo clippy --all-targets --workspace -- -D warnings

  # Run cargo --check on all platforms
  check:
    needs: [rustfmt, clippy]
    runs-on: ${{ matrix.triple.os }}
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        triple:
          # x86 or x64
          - {
              os: "ubuntu-latest",
              target: "x86_64-unknown-linux-gnu",
              cross: false,
              rust: stable,
            }
          - {
              os: "ubuntu-latest",
              target: "i686-unknown-linux-gnu",
              cross: true,
              rust: stable,
            }
          - {
              os: "ubuntu-latest",
              target: "x86_64-unknown-linux-musl",
              cross: false,
              rust: stable,
            }
          - {
              os: "ubuntu-latest",
              target: "i686-unknown-linux-musl",
              cross: true,
              rust: stable,
            }
          - {
              os: "macOS-latest",
              target: "x86_64-apple-darwin",
              cross: false,
              rust: stable,
            }
          - {
              os: "windows-2019",
              target: "x86_64-pc-windows-msvc",
              cross: false,
              rust: stable,
            }
          - {
              os: "windows-2019",
              target: "i686-pc-windows-msvc",
              cross: false,
              rust: stable,
            }
          - {
              os: "windows-2019",
              target: "x86_64-pc-windows-gnu",
              cross: false,
              rust: stable,
            }

          # aarch64
          - {
              os: "ubuntu-latest",
              target: "aarch64-unknown-linux-gnu",
              cross: true,
              rust: stable,
            }

          # armv7
          - {
              os: "ubuntu-latest",
              target: "armv7-unknown-linux-gnueabihf",
              cross: true,
              rust: stable,
            }

          # armv6
          - {
              os: "ubuntu-latest",
              target: "arm-unknown-linux-gnueabihf",
              cross: true,
              rust: stable,
            }

          # PowerPC 64 LE
          - {
              os: "ubuntu-latest",
              target: "powerpc64le-unknown-linux-gnu",
              cross: true,
              rust: stable,
            }

          # Risc-V 64gc
          - {
              os: "ubuntu-latest",
              target: "riscv64gc-unknown-linux-gnu",
              cross: true,
              rust: stable,
            }

          # macOS ARM
          - {
              os: "macOS-latest",
              target: "aarch64-apple-darwin",
              cross: true,
              rust: stable,
            }

    steps:
      - uses: actions/checkout@v2

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.triple.rust }}
          override: true
          target: ${{ matrix.triple.target }}

      - uses: Swatinem/rust-cache@v1
        with:
          key: ${{ matrix.triple.target }}

      - name: Check
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --all-targets --verbose --target=${{ matrix.triple.target }} --features "battery"
          use-cross: ${{ matrix.triple.cross }}

  # Check without the battery feature enabled on x86-64 for supported operating systems
  check-without-battery:
    needs: [rustfmt, clippy]
    runs-on: ${{ matrix.triple.os }}
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        triple:
          - {
              os: "ubuntu-latest",
              target: "x86_64-unknown-linux-gnu",
              cross: false,
              rust: stable,
            }
          - {
              os: "macOS-latest",
              target: "x86_64-apple-darwin",
              cross: false,
              rust: stable,
            }
          - {
              os: "windows-2019",
              target: "x86_64-pc-windows-msvc",
              cross: false,
              rust: stable,
            }

    steps:
      - uses: actions/checkout@v2

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.triple.rust }}
          override: true
          target: ${{ matrix.triple.target }}

      - uses: Swatinem/rust-cache@v1
        with:
          key: ${{ matrix.triple.target }}

      - name: Check without battery feature on the main 3
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --all-targets --verbose --target=${{ matrix.triple.target }} --no-default-features
          use-cross: ${{ matrix.triple.cross }}

  # Run tests x86-64 for supported operating systems
  test:
    needs: [rustfmt, clippy]
    runs-on: ${{ matrix.triple.os }}
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        triple:
          - {
              os: "ubuntu-latest",
              target: "x86_64-unknown-linux-gnu",
              cross: false,
              rust: stable,
            }
          - {
              os: "macOS-latest",
              target: "x86_64-apple-darwin",
              cross: false,
              rust: stable,
            }
          - {
              os: "windows-2019",
              target: "x86_64-pc-windows-msvc",
              cross: false,
              rust: stable,
            }

    steps:
      - uses: actions/checkout@v2

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.triple.rust }}
          override: true
          target: ${{ matrix.triple.target }}

      - uses: Swatinem/rust-cache@v1
        with:
          key: ${{ matrix.triple.target }}

      - name: Run tests
        run: cargo test --no-fail-fast
        env:
          CARGO_HUSKY_DONT_INSTALL_HOOKS: true
          RUST_BACKTRACE: full
