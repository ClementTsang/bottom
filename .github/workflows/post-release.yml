# Actions to run after releasing a version, like generating documentation via mkdocs or notifying packaging repos.

name: post-release

on:
  release:
    types: [published]

env:
  # Assign commit authorship to official Github Actions bot when pushing to the `gh-pages` branch:
  GIT_USER: "github-actions[bot]"
  GIT_EMAIL: "41898282+github-actions[bot]@users.noreply.github.com"

jobs:
  docs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set env
        run: |
          export RELEASE_VERSION=${{ github.event.release.tag_name }}
          echo "RELEASE_VERSION=${RELEASE_VERSION}" >> $GITHUB_ENV

      - name: Test env
        run: |
          echo $RELEASE_VERSION

      - name: Make sure you're not on master/main/nightly...
        run: |
          if [[ $RELEASE_VERSION == "master" || $RELEASE_VERSION == "main" || $RELEASE_VERSION == "nightly" ]]; then
            exit 1
          fi

      - uses: actions/setup-python@v4.5.0
        with:
          python-version: 3.11

      - name: Install Python dependencies
        run: pip install -r docs/requirements.txt

      - name: Configure git user and email
        run: |
          git config --global user.name ${GIT_USER}
          git config --global user.email ${GIT_EMAIL}
          echo Name: $(git config --get user.name)
          echo Email: $(git config --get user.email)

      - name: Build and deploy docs with mike as the latest stable branch
        run: |
          cd docs
          OLD_STABLE_VERSION=$(mike list stable | grep -Po '([0-9]+.[0-9]+.[0-9]+)' | head -n1)
          echo ${OLD_STABLE_VERSION}
          mike retitle --push stable ${OLD_STABLE_VERSION}
          mike deploy --push --update-aliases ${RELEASE_VERSION} stable
          mike retitle --push ${RELEASE_VERSION} "${RELEASE_VERSION} (stable)"

      # - name: Deploy to CF Pages
      #   run: |
      #     curl -X POST ${{ secrets.BOTTOM_CFP_HOOK }}

  packaging:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Test env
        run: |
          echo $RELEASE_VERSION

      - name: Make sure you're not on master...
        run: |
          if [[ $RELEASE_VERSION == "master" ]]; then
            exit 1
          fi

      - name: Make sure you're not on nightly...
        run: |
          if [[ $RELEASE_VERSION == "nightly" ]]; then
            exit 1
          fi

      - name: Trigger choco
        run: |
          curl -X POST https://api.github.com/repos/ClementTsang/choco-bottom/dispatches \
          -H 'Accept: application/vnd.github.everest-preview+json' \
          -u ${{ secrets.BOTTOM_PACKAGE_DEPLOYMENT }} \
          --data '{ "event_type": "update", "client_payload": { "version": "'"$RELEASE_VERSION"'" } }'
